% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modifySL.R
\name{modifySL}
\alias{modifySL}
\title{modifySL}
\usage{
modifySL(fit, newLibrary = fit$libraryNames, newMethod = fit$method,
  obsWeights = rep(1, length(fit$SL.predict)), verbose = FALSE, ...)
}
\arguments{
\item{fit}{An object of class \code{SuperLearner}}

\item{newLibrary}{A character vector of a subset of \code{fit$libraryNames}.}

\item{newMethod}{A \code{list} structured as a \code{SuperLearner} method. See \code{?write.method.template}.}

\item{obsWeights}{The weights used to compute the original Super Learner fit. Because these weights are not
returned with the \code{SuperLearner} object, they must be input again here.}

\item{verbose}{Passed to the method functions to print option messages.}

\item{...}{Other options. Currently not used.}
}
\value{
An object of \class{SuperLearner} with modifications recorded. See \code{?SuperLearner} for details.
}
\description{
Recompute the super learner estimator from a \code{SuperLearner} fit
based on a restricted set of candidate learners and/or a different loss
function than initially fit. 
Note that this function does not check for errors in the original SuperLearner
fit library as well as the SuperLearner function does. In essence, I'm assuming
you've already decided to get rid of the learners that had errors in the initial 
fitting procedure for computing this new Super Learner.
}
\examples{
n <- 100
X <- data.frame(x1=runif(n), x2=rnorm(n), x3=rbinom(n,1,0.5))
Y <- rnorm(n, X$x1 + X$x3)

# fit a super learner with library of three
set.seed(1234)
sl1 <- SuperLearner(Y=Y, X=X, SL.library=c("SL.glm","SL.gam","SL.mean"))

# recompute super learner omitting SL.gam
sl2 <- modifySL(fit = sl1, newLibrary = c("SL.glm_All","SL.mean_All"))

# should be the same as this super learner 
set.seed(1234)
sl3 <- SuperLearner(Y=Y, X=X, SL.library=c("SL.glm","SL.mean"))

# can also modify super learner method
sl4 <- modifySL(fit = sl1, newMethod = "method.CC_LS")

# should be the same as this 
set.seed(1234)
sl5 <- SuperLearner(Y=Y, X=X, SL.library = c("SL.glm","SL.gam","SL.mean"), 
method = "method.CC_LS")

# can also modify both simultaneously
sl6 <- modifySL(fit = sl1, newLibrary = c("SL.glm_All","SL.mean_All"),
newMethod = "method.CC_LS")

# same as this
set.seed(1234)
sl7 <- SuperLearner(Y=Y, X=X, SL.library = c("SL.glm","SL.mean"), 
method = "method.CC_LS")
}

